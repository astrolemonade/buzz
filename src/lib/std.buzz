|| If condition is false print message and exit program
|| @param condition assert condition
|| @param message message printed if `condition` is false
export extern fun assert(bool condition, str message) > void;

|| Prints value on stdout
|| @param value value to print
export extern fun print(str value) > void;

|| Parse int, returns false if string does not represent a int
|| @param string string to parse
|| @return int parsed or null
export extern fun parseInt(str string) > int?;

|| Parse uint, returns false if string does not represent a uint
|| @param string string to parse
|| @return uint parsed or null
export extern fun parseUint(str string) > uint?;

|| Parse float, returns false if string does not represent a float
|| @param string string to parse
|| @return float parsed or null
export extern fun parseFloat(str string) > float?;

|| Cast float to a integer value
|| @param n value to cast
|| @return casted value
export extern fun floatToInt(float n) > int;

|| Cast float to a uint value
|| @param n value to cast
|| @return casted value
export extern fun floatToUint(float n) > uint;

|| Cast int to a float value
|| @param n value to cast
|| @return casted value
export extern fun intToFloat(int n) > float;

|| Cast uint to a float value
|| @param n value to cast
|| @return casted value
export extern fun uintToFloat(uint n) > float;

|| Return ascii char for given byte
export extern fun char(int byte) > str;

|| Return evenly distributed random number between `min` and `max`
|| @param min Minimum value, if omitted `0`
|| @param max Maximum value, if omitted `min + 1`
|| @return Random value
export extern fun random(int? min = null, int? max = null) > int;